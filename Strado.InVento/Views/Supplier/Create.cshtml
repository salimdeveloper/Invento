@model Strado.InVento.Core.ViewModels.SupplierViewModel

@{
    ViewBag.Title = Model.Heading;
}

<div class="row">
    <section class="content-header"></section>
</div>
<div class="row">
    <!-- left column -->
    <div class="col-md-12">
        <!-- general form elements -->
        <div class="box">
            <div class="box-header with-border">
                <h1 class="box-title">@Model.Heading</h1>
            </div>
            <!-- /.box-header -->
            <!-- form start -->
            <div class="form-horizontal">
                <div class="box-body">

                    @using (Html.BeginForm(Model.Action, "Supplier"))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.Id)
                        @Html.HiddenFor(m => m.AddressId)
                        <div class="form-group">
                            @Html.LabelFor(model => model.SupplierName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SupplierName, new { htmlAttributes = new { @class = "form-control", palceholder = "eg: abc company Ltd" } })
                                @Html.ValidationMessageFor(model => model.SupplierName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Address.Address1, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Address.Address1, new { htmlAttributes = new { @class = "form-control", palceholder = "eg: Office No:" } })
                                @Html.ValidationMessageFor(model => model.Address.Address1, "", new { @class = "text-danger" })
                            </div>
                        </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Address.Address2, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Address.Address2, new { htmlAttributes = new { @class = "form-control" } })

                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Address.ContactName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Address.ContactName, new { htmlAttributes = new { @class = "form-control", palceholder = "eg: Jhon Smith" } })
                                    @Html.ValidationMessageFor(model => model.Address.ContactName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Address.ContactNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Address.ContactNo, new { htmlAttributes = new { @class = "form-control", palceholder = "eg: 9876543210" } })
                                    @Html.ValidationMessageFor(model => model.Address.ContactNo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Address.City, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Address.City, new { htmlAttributes = new { @class = "form-control", palceholder = "eg: New York City" } })
                                    @Html.ValidationMessageFor(model => model.Address.City, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Address.State, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Address.State, new { htmlAttributes = new { @class = "form-control", palceholder = "eg: New York" } })
                                    @Html.ValidationMessageFor(model => model.Address.State, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Address.Pin, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Address.Pin, new { htmlAttributes = new { @class = "form-control", palceholder = "eg: 78012" } })
                                    @Html.ValidationMessageFor(model => model.Address.Pin, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group ">
                                <div class="col-md-3 text-center "><button type="submit" class="btn btn-primary pull-right">Save</button></div>
                                <div class="col-md-3 text-center ">
                                    <a href="/supplier/SupplierList">
                                        <button type="button" class="btn btn-default pull-left">Cancel</button>
                                    </a>
                                </div>
                            </div>

                    }

                </div>
            </div>
        </div>
    </div>
</div>