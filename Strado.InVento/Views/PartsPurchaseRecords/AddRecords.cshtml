@model Strado.InVento.Core.ViewModels.PartsPurchaseRecordsViewModel
@{
    ViewBag.Title = "AddRecords";
}

<div class="row">
    <section class="content-header"></section>
</div>
<div class="row">

    <!-- left column -->
    <div class="col-md-12">
        <!-- general form elements -->
        <div class="box">
            <div class="box-header with-border">
                <h1 class="box-title">@Model.Heading</h1>
            </div>
            <!-- /.box-header -->
            <!-- form start -->
            <div class="form-horizontal">
                <div class="box-body">
                    @using (Html.BeginForm(Model.Action, "PartsPurchaseRecords"))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.Id)


                        @*@Html.ValidationSummary(true, "", new { @class = "help-block" })*@
                        <div class="form-group">
                            @Html.LabelFor(model => model.PartsId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.PartsId, new SelectList(Model.Parts, "Id", "PartName"), "Select a Part", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.PartsId, "", new { @class = "has-error" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PurchasePrice, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.PurchasePrice, htmlAttributes: new { @class = "form-control", placeholder = "eg : 99.00" })
                                @Html.ValidationMessageFor(model => model.PurchasePrice, "", new { @class = "has-error" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.PurchaseQty, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.PurchaseQty, htmlAttributes: new { @class = "form-control", placeholder = "eg : 10" })
                                @Html.ValidationMessageFor(model => model.PurchaseQty, "", new { @class = "has-error" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.PurchaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @*@Html.TextBoxFor(model => model.PurchaseDate, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PurchaseDate, "", new { @class = "has-error" })*@

                                <div class="input-group date">
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                    @Html.TextBoxFor(model => model.PurchaseDate, htmlAttributes: new { @class = "form-control  pull-left", placeholder = "eg : 13/12/2016", @id = "datepicker" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SuppliersId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.SuppliersId, new SelectList(Model.Suppliers, "Id", "SupplierName"), "Select a Supplier", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.SuppliersId, "", new { @class = "has-error" })
                            </div>
                        </div>


                        <div class="form-group ">
                            <div class="col-md-3 text-center "><button type="submit" class="btn btn-primary pull-right">Save</button></div>
                            <div class="col-md-3 text-center ">
                                <a href="/PartsPurchaseRecords/PurchaseDetails">
                                <button type="button" class="btn btn-default pull-left">Cancel</button>
                                </a>
                            </div>


                        </div>




                    }
                </div>
                <div>
                </div>

            </div>
        </div>
    </div>
</div>
